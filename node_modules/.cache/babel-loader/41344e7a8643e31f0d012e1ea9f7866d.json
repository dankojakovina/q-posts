{"ast":null,"code":"import QAvatar from '../components/QAvatar.vue';\nexport default {\n  name: 'QCommentInput',\n  components: {\n    QAvatar\n  },\n  props: {\n    padding: {\n      required: false,\n      type: String,\n      default: '5px 10px'\n    },\n    noPadding: {\n      required: false,\n      type: Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      comment: ''\n    };\n  },\n\n  computed: {\n    getPadding() {\n      return this.noPadding ? 0 : this.padding;\n    }\n\n  },\n  methods: {\n    postComment() {\n      if (!this.comment) return;\n      this.$emit('postComment', this.comment);\n      this.comment = '';\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAaA;AAEA;EACAA,qBADA;EAEAC;IACAC;EADA,CAFA;EAKAC;IACAC;MACAC,eADA;MAEAC,YAFA;MAGAC;IAHA,CADA;IAMAC;MACAH,eADA;MAEAC,aAFA;MAGAC;IAHA;EANA,CALA;;EAiBAE;IACA;MACAC;IADA;EAGA,CArBA;;EAsBAC;IACAC;MACA;IACA;;EAHA,CAtBA;EA2BAC;IACAC;MACA;MACA;MACA;IACA;;EALA;AA3BA","names":["name","components","QAvatar","props","padding","required","type","default","noPadding","data","comment","computed","getPadding","methods","postComment"],"sourceRoot":"src/components","sources":["QCommentInput.vue"],"sourcesContent":["<template>\n\t<div :style=\"{'padding': getPadding}\" class=\"d-flex justify-content-between align-items-center bg-white\">\n\t\t<div class=\"d-flex flex-1\">\n\t\t\t<QAvatar size=\"small\" />\n\t\t\t<input v-model=\"comment\" @keydown.enter=\"postComment\" :placeholder=\"$t('write_comment')\" type=\"text\">\n\t\t</div>\n\t\t<div>\n\t\t\t<i @click=\"postComment\" class=\"pointer fa-solid fa-paper-plane\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport QAvatar from '../components/QAvatar.vue';\n\nexport default {\n  name: 'QCommentInput',\n  components: {\n    QAvatar\n  },\n  props: {\n    padding: {\n      required: false,\n      type: String,\n      default: '5px 10px'\n    },\n    noPadding: {\n      required: false,\n      type: Boolean,\n      default: false\n    }\n  },  \n  data() {\n    return {\n      comment: ''\n    }\n  },\n  computed: {\n    getPadding() {\n      return this.noPadding ? 0 : this.padding;\n    }\n  }, \n  methods: {\n    postComment() {\n      if(!this.comment) return;\n      this.$emit('postComment', this.comment);\n      this.comment = '';\n    }\n  }\n}\n</script>\n\n<style scoped>\n.bg-white {\n  background: var(--q-primary)!important;\n}\n\ninput {\n  width: 100%;\n  border: none;\n  font-size: 12px;\n  padding: 4px;\n  background: transparent;\n  outline: none;\n  color: var(--q-text-dark)\n}\n\n.flex-1 {\n  flex: 1;\n}\n\n.text-dark {\n\tcolor: var(--q-text-dark)!important;\n}\n\ni {\n    color: var(--q-text-dark);\n}\n\n</style>\n"]},"metadata":{},"sourceType":"module"}